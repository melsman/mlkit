

********** opaque.sml *************

> signature S =
    sig
      datatype u
        con A : s
    end
  functor f(
           ): sig
                type a
                val a : a
                val pr : a -> string
              end
  functor g(
           ): sig
                type a
                type b
                val A : a
                val B : b
                val pr_a : a -> string
                val pr_b : b -> string
              end
  functor h(type a
            val a : a
            val pr : a -> string
           ): sig
                type b
                val b : b
                val pr : b -> string
              end
  functor i(
           ): sig
                type c
                val c : c
                val pr : c -> string
              end
  structure S :
    sig
      type s
    end
  structure f :
    sig
      type a
      val a : a
      val pr : a -> string
    end
  structure g :
    sig
      type a
      type b
      val A : a
      val B : b
      val pr_a : a -> string
      val pr_b : b -> string
    end
  structure h :
    sig
      type b
      val b : b
      val pr : b -> string
    end
  structure i :
    sig
      type c
      val c : c
      val pr : c -> string
    end
