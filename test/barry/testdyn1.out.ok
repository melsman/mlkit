Testing list operations:
  [rev, @, map]...
Ok - rev...
Ok - map...
Ok - @...
Testing string operations:
  [implode, explode, chr, ord, size]...
Ok - int_to_string...
Ok - implode...
Ok - explode...
Ok - chr...
Ok - ord...
Ok - Chr...
Ok - Chr2...
Ok - size...
Testing ref [ref, :=, !]...
Ok - !1...
Ok - :=1...
Ok - !2...
Ok - :=2...
Ok - !3...
Testing polymorphic equality...
Ok - equal...
Ok - equal2...
Ok - equal3...
Ok - equal4...
Ok - equal5 (ref1)...
Ok - equal5 (ref2)...
Ok - equal6 (dat k)...
Ok - equal7 (dat k)...
Testing arithmetic integer operations:
  [~, abs, floor, +, -, *, div, mod, <, >, <=, >=] ...
Ok - ~1...
Ok - ~2...
Ok - abs1...
Ok - abs2...
Ok - floor1...
Ok - floor2...
Ok - floor3...
Ok - +...
Ok - -...
Ok - *...
Ok - intdivmod - 2 mod 3 = 2, 2 div 3 = 0...
Ok - intdivmod - 34 mod ~3 = ~2, 34 div ~3 = ~12...
Ok - intdivmod - 5 mod ~2 = ~1, 5 div ~2 = ~3...
Ok - intdivmod - ~7 mod 3 = 2, ~7 div 3 = ~3...
Ok - Div1...
Ok - Div2...
Ok - <1...
Ok - <2...
Ok - <3...
Ok - >1...
Ok - >2...
Ok - >3...
Ok - <=1...
Ok - <=2...
Ok - <=3...
Ok - >=1...
Ok - >=2...
Ok - >=3...
Testing arithmetic real operations:
   [+, -, *, /, ~, abs, real, sqrt, <, >, <=, >=] ...
Ok - +...
Ok - -...
Ok - *...
Ok - /...
Ok - ~1...
Ok - ~2...
Ok - abs1...
Ok - abs2...
Ok - real1...
Ok - real2...
Ok - sqrt1...
Ok - sqrt2...
Ok - sqrt3...
Ok - <1...
Ok - <2...
Ok - <3...
Ok - >1...
Ok - >2...
Ok - >3...
Ok - <=1...
Ok - <=2...
Ok - <=3...
Ok - >=1...
Ok - >=2...
Ok - >=3...
Testing composition o:
Ok - o...
Testing generative exceptions:
Ok - exn - generative...
End of test.
