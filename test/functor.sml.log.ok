

********** functor.sml *************

> signature A =
    sig
      type t
      val a : t
    end
  functor F(type t
            val pr : t -> string
           ): sig
                datatype k
                  con A : t -> k
                val pr : k -> string
              end
  functor G(type t
            val a : t
           ): sig
                type t
                val b : t
              end
  functor H(type s
            type t
            val a : t
            val pr : t -> string
           ): sig
                structure A1 :
                  sig
                    type t
                    val pr : t -> string
                  end
                structure A2 :
                  sig
                    datatype k
                      con A : t -> k
                    val pr : k -> string
                  end
                structure A3 :
                  sig
                    type t
                    val b : t
                  end
                val a : k
              end
  structure B1 :
    sig
      type s
      datatype t
        con J : t
        con K : t
      val a : t
      val pr : t -> string
    end
  structure B2 :
    sig
      type s
      datatype t
        con J : t
        con K : t
      val a : t
      val pr : t -> string
    end
  structure H1 :
    sig
      structure A1 :
        sig
          type t
          val pr : t -> string
        end
      structure A2 :
        sig
          datatype k
            con A : t -> k
          val pr : k -> string
        end
      structure A3 :
        sig
          type t
          val b : t
        end
      val a : k
    end
  structure H2 :
    sig
      structure A1 :
        sig
          type t
          val pr : t -> string
        end
      structure A2 :
        sig
          datatype k
            con A : t -> k
          val pr : k -> string
        end
      structure A3 :
        sig
          type t
          val b : t
        end
      val a : k
    end
