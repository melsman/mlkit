. . . . . . . > datatype t
    con Add : t * t->t
    con Mul : t * t->t
    con R : real->t
    con Var : string->t
  val a = Mul(Add(Var "a",Add(R 1.0,R 3.0)),Add(Add(Var "a",Add(R 1.0,R 3.0)),Var "a")) : t
  val b = Add(Add(Add(Var "a",Add(R 1.0,R 3.0)),Var "a"),Add(Var "a",Add(R 1.0,R 3.0))) : t
  val mkt = fn : int->t
. . . . > datatype s
    con B : s * s->s
    con L : s
  val c = B(B(B(B(B(B(L,L),L),B(L,L)),B(B(L,L),L)),B(B(B(L,L),L),B(L,L))),B(B(B(B(L,L),L),B(L,L)),B(B(L,L),L))) : s
  val mks = fn : int->s
