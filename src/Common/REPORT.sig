(** Reporting of errors, binding, and so on. Tidier than the output
    generated by the pretty-printer.
*)

signature REPORT =
  sig
    type Report                                  (* Some lines of text for the user. *)
    val null     : Report                        (* Nothing to report. *)
    val line     : string -> Report              (* One line of text. *)
    val //       : Report * Report -> Report
    val flatten  : Report list -> Report
    val indent   : int * Report -> Report
    val adjust   : int * Report -> Report
    val decorate : string * Report -> Report

    val print    : Report -> unit                (* Output on std_out *)
    val print'   : Report -> TextIO.outstream -> unit   (* Output on outstream *)

    val pu       : Report Pickle.pu
    val eq       : Report * Report -> bool

    exception DeepError of Report
  end

(**

 [decorate s report] indents report in a flashy way which puts an s in
  front of the first line and indents the rest.  If there are no lines
  in report, return s as the report.

*)
